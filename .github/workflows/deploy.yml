name: Deploy to GCP

on:
  push:
    branches:
      - deployment

jobs:
  setup:
    name: Setup GCP Credentials
    runs-on: ubuntu-latest
    outputs:
      PROJECT_ID: ${{ steps.auth.outputs.project_id }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

  deploy-backend:
    name: Deploy Backend (.NET to App Engine)
    needs: setup
    runs-on: ubuntu-latest
    env:
      DATABASE_HOST: ${{ secrets.DB_HOST }}
      DATABASE_USERNAME: ${{ secrets.DB_USER }}
      DATABASE_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DB_NAME }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Authenticate
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - name: Set GOOGLE_APPLICATION_CREDENTIALS
      run: echo "GOOGLE_APPLICATION_CREDENTIALS=${{ steps.auth.outputs.credentials_file_path }}" >> $GITHUB_ENV

    - name: Install envsubst
      run: sudo apt-get update && sudo apt-get install -y gettext

    - name: Generate app.yaml from template
      run: envsubst < backend/app.template.yaml > backend/app.yaml

    - name: Install EF CLI
      run: dotnet tool install --global dotnet-ef

    - name: Restore dependencies
      working-directory: backend/Acebook
      run: dotnet restore

    - name: Build backend
      working-directory: backend/Acebook
      run: dotnet build --no-restore

    - name: Run EF Core Migrations
      env:
        ASPNETCORE_ENVIRONMENT: Production
        DATABASE_HOST: ${{ secrets.DB_HOST }}
        DATABASE_USERNAME: ${{ secrets.DB_USER }}
        DATABASE_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DATABASE_NAME: ${{ secrets.DB_NAME }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        PATH: ${{ env.PATH }}:/home/runner/.dotnet/tools
      run: |
        cd backend/Acebook
        dotnet ef database update --no-build

    - name: Check credentials file exists
      run: ls -l $GOOGLE_APPLICATION_CREDENTIALS

    - name: Deploy to App Engine
      run:  |
        gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
        gcloud app deploy backend/app.yaml --quiet

  deploy-frontend:
    name: Deploy Frontend (React to GCS)
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Authenticate
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - name: Set GOOGLE_APPLICATION_CREDENTIALS
      run: echo "GOOGLE_APPLICATION_CREDENTIALS=${{ steps.auth.outputs.credentials_file_path }}" >> $GITHUB_ENV

    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Build frontend
      run: |
        cd frontend
        npm ci
        npm run build

    - name: Check credentials file exists
      run: ls -l $GOOGLE_APPLICATION_CREDENTIALS

    - name: Upload to bucket
      run: |
        gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
        gsutil -m rsync -r -c frontend/dist gs://liberis-bucket
